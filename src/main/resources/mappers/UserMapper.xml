<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.userdemo.model.repository.UserDao">

    <resultMap id="users" type="com.example.userdemo.model.entity.Users">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="userphone" property="userphone" jdbcType="VARCHAR"/>
        <result column="registerdata" property="registerdata" jdbcType="TIMESTAMP"/>
        <result column="updatadata" property="updatadata" jdbcType="TIMESTAMP"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="accountnonexpired" property="accountnonexpired" jdbcType="BOOLEAN"/>
        <result column="accountnonlocked" property="accountnonlocked" jdbcType="BOOLEAN"/>
        <result column="iscredentialsnonexpired" property="iscredentialsnonexpired" jdbcType="BOOLEAN"/>
        <result column="isenabled" property="isenabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <insert id="save" parameterType="com.example.userdemo.model.repository.UserDao">
        insert into users (email, password, username, userphone, registerdata, updatadata, role,
                           accountnonexpired, accountnonlocked, iscredentialsnonexpired, isenabled)
        values (#{email}, #{password}, #{username}, #{userphone}, #{registerdata}, #{updatadata}, #{role},
                #{accountnonexpired}, #{accountnonlocked}, #{iscredentialsnonexpired}, #{isenabled});
    </insert>

    <select id="findByEmail" resultMap="users">
        select *
        from users
        where email = #{email};
    </select>
    <select id="findById" resultMap="users">
        select
        from users
        where id = #{id};
    </select>

    <update id="accountnonlocked" parameterType="com.example.userdemo.model.repository.UserDao">
        update users
        set accountnonlocked=#{accountnonlocked},
            updatadata=#{newupdatadata}
        where id = #{id}
          AND updatadata = #{updatadata};
    </update>

    <select id="findByUsersName" resultMap="users">
        select id, useremail, username, userphone, registerdata, updatadata, accountlocked
        from users
        where username like concat('%', #{name}, '%')
    </select>
    <update id="updateUsers" parameterType="com.example.userdemo.model.repository.UserDao">
        UPDATE users
        SET email=#{email},
            password=#{password},
            username=#{username},
            userphone=#{userphone},
            updatadata=#{newupdatadata},
            WHERE id = #{id}
                AND updatadata = #{updatadata}
    </update>

    <select id="findAllUsers" resultMap="users">
        select *
        from users;
    </select>

</mapper>